// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// TODO:
// 1. how to connect price, attractiveness, field and mission
// 2. remove irrelvant fields

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum FieldStatus {
  IN_PROGRESS
  NOT_KNOWN
}

enum Familiarity {
  KNOWN
  NOT_KNOWN
}

enum Product {
  TOMATO
  CUCAMBER
  ONION
}

enum Region {
  SOUTH
  NORTH
  CENTER
  JERUSALEM
}

model Field {
  id                Int         @id @default(autoincrement())
  leket_name        String
  product           Product
  framer            farmer      @relation(fields: [farmer_id], references: [id])
  farmer_id         String
  region            Region
  familiarity       Familiarity
  leket_coordinates Json
  polygon           Json
  status            FieldStatus
  status_date       DateTime
  delay_date        DateTime // what does it mean delay? maybe regarding to mission?
  growth_cat        String // what are the categories and are they relevant?
  growth_id         String // referenced to attractiveness metrics growth id?
  growth_name       String // why relevant?
  dunam             Float
  growth_type       String // why relevant?
  cover_type        String // what are the types?
  global_id         String // what is that?
  ndvis             Ndvi[]
  missions          mission[]
}

model Ndvi {
  id       Int      @id @default(autoincrement())
  field    Field    @relation(fields: [field_id], references: [id])
  field_id Int      @unique
  date     DateTime
  max      Float
  mean     Float
  median   Float
  min      Float
  like     Boolean
}

model attractiveness {
  id            Int      @id
  product       String
  date          DateTime
  leket_score   Float
  prices_score  Float
  average_score Float
  like          Boolean
}

model farmer {
  id     String  @id
  name   String
  active Boolean
  fields Field[] // farmer can have many fields?
}

model price {
  id            Int      @id @default(autoincrement())
  market        String
  date          DateTime
  product_id    Int
  branch        String // why needed?
  product       String
  species       String // why needed?
  type          String // why needed?
  quality       String
  average_price Float
}

model mission {
  id              Int      @id
  date            DateTime
  field           Field    @relation(fields: [field_id], references: [id])
  field_id        Int
  amount_kg       Float
  was_ripe        String
  was_picked      Boolean
  not_picked_desc String
}
